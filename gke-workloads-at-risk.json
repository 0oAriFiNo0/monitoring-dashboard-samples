{
  "category": "CUSTOM",
  "dashboardFilters": [],
  "displayName": "GKE Workloads at Risk ",
  "labels": {},
  "mosaicLayout": {
    "columns": 12,
    "tiles": [
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "blankView": {},
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_cores'\n| filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n| group_by\n    [resource.project_id, resource.location, resource.cluster_name,\n     resource.namespace_name,\n     metadata.system.top_level_controller_name:\n       metadata.system_labels.top_level_controller_name],\n    [value_core_request_mean: mean(value.request_cores)]\n| every 5m\n| group_by [], [row_count: row_count()]"
            }
          },
          "title": "workloads analyzed"
        },
        "width": 2,
        "xPos": 8,
        "yPos": 0
      },
      {
        "height": 6,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "Best Effort - Memory/CPU not set"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 2
      },
      {
        "height": 6,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "Burstable - Memory/CPU running above request"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 8
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/memory/request_bytes'\n| filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n| group_by 5m, [value_request_bytes_mean: mean(value.request_bytes)]\n| every 5m\n| group_by\n    [resource.cluster_name, resource.location, resource.project_id,\n     resource.namespace_name, metadata.system.top_level_controller_name,\n     metadata.system.top_level_controller_type]\n| { all_workloads:\n      ident\n      | group_by [], [row_count()]\n  ; best_effort_workloads:\n      filter val() == 0\n      | group_by [], [row_count()] }\n| join\n| window 5m\n| value\n    [v_0:\n       scale(div(best_effort_workloads.row_count, all_workloads.row_count), '%')]"
            }
          },
          "title": "MEM not set"
        },
        "width": 2,
        "xPos": 0,
        "yPos": 0
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_cores'\n| filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n| group_by 5m, [value_request_bytes_mean: mean(value.request_cores)]\n| every 5m\n| group_by\n    [resource.cluster_name, resource.location, resource.project_id,\n     resource.namespace_name, metadata.system.top_level_controller_name]\n| { all_workloads:\n      ident\n      | group_by [], [row_count()]\n  ; best_effort_workloads:\n      filter val() == 0\n      | group_by [], [row_count()] }\n| join\n| window 5m\n| value\n    [v_0:\n       scale(div(best_effort_workloads.row_count, all_workloads.row_count), '%')]"
            }
          },
          "title": "CPU not set"
        },
        "width": 2,
        "xPos": 2,
        "yPos": 0
      },
      {
        "height": 2,
        "widget": {
          "text": {
            "content": "**Reliability Risk**: For **memory**: kubelet can stop your Pods anytime and mark them as failed. For **CPU**: can be throttled to 0, causing your workloads to become unresponsive. [Set appropriate resource requests and limits](https://cloud.google.com/architecture/best-practices-for-running-cost-effective-kubernetes-applications-on-gke#set_appropriate_resource_requests_and_limits)",
            "format": "MARKDOWN"
          },
          "title": "Best Effort workloads at risk"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 2
      },
      {
        "height": 2,
        "widget": {
          "text": {
            "content": "**Red** - Reliability risk.  \n**Yellow** - Performance risk.",
            "format": "MARKDOWN"
          },
          "title": "Dashboard Legend"
        },
        "width": 2,
        "xPos": 10,
        "yPos": 0
      },
      {
        "height": 2,
        "widget": {
          "text": {
            "content": "**Performance Reliability Risk**: For **memory**: when workloads are running above requests, it has the same problem as best effort pods (can be killed at any time). For **CPU**: when workloads are running above requests, slowing down the workload\n [Set appropriate resource requests and limits](https://cloud.google.com/architecture/best-practices-for-running-cost-effective-kubernetes-applications-on-gke#set_appropriate_resource_requests_and_limits)",
            "format": "MARKDOWN"
          },
          "title": "Burstable workloads at risk"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 8
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "YELLOW",
                "direction": "ABOVE",
                "label": "",
                "value": 0.1
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "{ all_non_besteffort_workloads:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_cores'\n    | filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n    | group_by 5m, [value_request_cores_mean: mean(value.request_cores)]\n    | every 5m\n    | group_by\n        [resource.project_id, resource.location, resource.cluster_name,\n         resource.namespace_name,\n         metadata.system.top_level_controller_name:\n           metadata.system_labels.top_level_controller_name,\n         metadata.system.top_level_controller_type:\n           metadata.system_labels.top_level_controller_type]\n           ,[value_request_cores_mean_aggregate: mean(value_request_cores_mean)]\n    | filter val() != 0\n    | group_by [], [row_count: row_count()]\n; burstable_workload_risk:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/cpu/request_utilization'\n    | filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n    | group_by 5m,\n        [value_request_utilization_mean: mean(value.request_utilization)]\n    | every 5m\n    | group_by\n        [resource.project_id, resource.location, resource.cluster_name,\n         resource.namespace_name,\n         metadata.system.top_level_controller_name:\n           metadata.system_labels.top_level_controller_name,\n         metadata.system.top_level_controller_type:\n           metadata.system_labels.top_level_controller_type], [value_request_utilization_mean_aggregate:\n       mean(value_request_utilization_mean)]\n    | filter val() >= 1 \n    | group_by [], [row_count: row_count()]}\n| join\n| value [v_0: scale(div(burstable_workload_risk.row_count, all_non_besteffort_workloads.row_count),'%')]\n"
            }
          },
          "title": "CPU under-provisioned"
        },
        "width": 2,
        "xPos": 6,
        "yPos": 0
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "thresholds": [
              {
                "color": "RED",
                "direction": "ABOVE",
                "label": "",
                "value": 0.1
              }
            ],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "{ all_non_besteffort_workloads:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/request_bytes'\n    | filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n    | group_by 5m, [value_request_bytes_mean: mean(value.request_bytes)]\n    | every 5m\n    | group_by\n        [resource.project_id, resource.location, resource.cluster_name,\n         resource.namespace_name,\n         metadata.system.top_level_controller_name:\n           metadata.system_labels.top_level_controller_name],\n        [value_request_bytes_mean_mean: mean(value_request_bytes_mean)]\n    | filter val() != 0\n    | group_by [], [row_count: row_count()]\n; burstable_workload_risk:\n    fetch k8s_container\n    | metric 'kubernetes.io/container/memory/request_utilization'\n    | filter\n        (resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n         && metric.memory_type == 'non-evictable')\n    | group_by 3d,\n        [value_request_utilization_mean: mean(value.request_utilization)]\n    | every 5m\n    | group_by\n        [resource.project_id, resource.location, resource.cluster_name,\n         resource.namespace_name,\n         metadata.system_labels.top_level_controller_name,\n         metadata.system_labels.top_level_controller_type],\n        [value_request_utilization_mean: mean(value_request_utilization_mean)]\n    | filter val() >= 1\n    | group_by [], [row_count: row_count()] }\n| join\n| value\n    [v_0:\n       scale(\n         div(burstable_workload_risk.row_count,\n           all_non_besteffort_workloads.row_count),\n         '%')]"
            }
          },
          "title": "MEM under-provisioned"
        },
        "width": 2,
        "xPos": 4,
        "yPos": 0
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "columnSettings": [
              {
                "column": "project_id",
                "visible": true
              },
              {
                "column": "location",
                "visible": true
              },
              {
                "column": "cluster_name",
                "visible": true
              },
              {
                "column": "namespace_name",
                "visible": true
              },
              {
                "column": "system_labels.top_level_controller_name",
                "visible": true
              }
            ],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/memory/request_bytes'\n| filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n| group_by 5m, [value_request_bytes_mean: mean(value.request_bytes)]\n| every 5m\n| group_by\n    [resource.project_id, resource.location, resource.cluster_name,\n     resource.namespace_name,\n     metadata.system.top_level_controller_name:\n       metadata.system_labels.top_level_controller_name,\n     metadata.system.top_level_controller_type:\n       metadata.system_labels.top_level_controller_type],\n    [value_request_bytes_mean_mean: mean(value_request_bytes_mean)]\n| filter val() == 0"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Memory (reliability risk) - workloads without memory requested"
        },
        "width": 6,
        "xPos": 0,
        "yPos": 4
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "columnSettings": [
              {
                "column": "resource.project_id",
                "visible": true
              },
              {
                "column": "resource.location",
                "visible": true
              },
              {
                "column": "resource.cluster_name",
                "visible": true
              },
              {
                "column": "resource.namespace_name",
                "visible": true
              },
              {
                "column": "metadata.system.top_level_controller_name",
                "visible": true
              },
              {
                "column": "metadata.system.top_level_controller_type",
                "visible": true
              }
            ],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_cores'\n| filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n| group_by 5m, [value_request_cores_mean: mean(value.request_cores)]\n| every 5m\n| group_by\n    [resource.project_id, resource.location, resource.cluster_name,\n     resource.namespace_name,\n     metadata.system.top_level_controller_name:\n       metadata.system_labels.top_level_controller_name,\n     metadata.system.top_level_controller_type:\n       metadata.system_labels.top_level_controller_type],\n    [value_request_bytes_mean_mean: mean(value_request_cores_mean)]\n| filter val() == 0"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "CPU (reliability risk) - workloads without CPU requested"
        },
        "width": 6,
        "xPos": 6,
        "yPos": 4
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/cpu/request_utilization'\n| filter resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n| group_by 5m, [value_request_utilization_mean: mean(value.request_utilization)]\n| every 5m\n| group_by\n    [resource.project_id, resource.location, resource.cluster_name,\n     resource.namespace_name,\n     metadata.system.top_level_controller_name:\n       metadata.system_labels.top_level_controller_name],\n    [value_request_utilization_mean_aggregate:\n       mean(value_request_utilization_mean)]\n| filter val() >= 1\n| scale '%'"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "CPU (performance risk) - workloads running above requested for CPU"
        },
        "width": 6,
        "xPos": 6,
        "yPos": 10
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/container/memory/request_utilization'\n| filter\n    (resource.namespace_name !~ '(kube|istio|gatekeeper|gke|gmp)-system'\n     && metric.memory_type == 'non-evictable')\n| group_by 5m, [value_request_utilization_mean: mean(value.request_utilization)]\n| every 5m\n| group_by\n    [resource.project_id, resource.location, resource.cluster_name,\n     resource.namespace_name, metadata.system_labels.top_level_controller_name,\n     metadata.system_labels.top_level_controller_type],\n    [value_request_utilization_mean: mean(value_request_utilization_mean)]\n| filter val() >= 1\n| scale '%'"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Memory (reliability risk) - workloads running above requested for memory"
        },
        "width": 6,
        "xPos": 0,
        "yPos": 10
      },
      {
        "height": 6,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "14-day Peak Recommendations (Deployments only)"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 14
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_scale\n| metric\n    'kubernetes.io/autoscaler/container/memory/per_replica_recommended_request_bytes'\n| group_by 14d,\n    [value_per_replica_recommended_request_bytes_mean:\n       max(value.per_replica_recommended_request_bytes)]\n| every 5m\n\n"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "MEM Recommended per replica request bytes [MAX]"
        },
        "width": 6,
        "xPos": 0,
        "yPos": 16
      },
      {
        "height": 4,
        "widget": {
          "timeSeriesTable": {
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_scale\n| metric\n    'kubernetes.io/autoscaler/container/cpu/per_replica_recommended_request_cores'\n| group_by 14d,\n    [value_per_replica_recommended_request_cores_mean:\n       max(value.per_replica_recommended_request_cores)]\n| every 5m"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "CPU Recommended per replica request cores [MAX] "
        },
        "width": 6,
        "xPos": 6,
        "yPos": 16
      },
      {
        "height": 2,
        "widget": {
          "text": {
            "content": "Recommended resource requests for CPU and memory requirements, ensuring efficient resource based on VPA recommendations.\n\n**Want to see workload recommendations at scale?**\n[Right-size your GKE workloads](https://cloud.google.com/blog/products/containers-kubernetes/optimize-gke-workloads-at-scale)",
            "format": "MARKDOWN"
          },
          "title": "Workload Rightsizing"
        },
        "width": 12,
        "xPos": 0,
        "yPos": 14
      }
    ]
  }
}